local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local model1Id = "rbxassetid://94879635661219"
local model2Id = "rbxassetid://128376534834779"
local jumpscareImageId = "rbxassetid://136012891423153"
local jumpscareSoundId = "rbxassetid://3779045779"

local function spawnInFront(assetId, distance, faceOffset, heightOffset)
	local success, result = pcall(function()
		return game:GetObjects(assetId)
	end)
	if success and result and result[1] then
		local obj = result[1]
		obj.Parent = workspace

		local char = player.Character or player.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")

		local mainPart = obj:FindFirstChildWhichIsA("BasePart")
		if mainPart then
			obj.PrimaryPart = mainPart
			local spawnCF = hrp.CFrame * CFrame.new(0, heightOffset, -distance)
			obj:SetPrimaryPartCFrame(spawnCF)

			local hitbox = Instance.new("Part")
			hitbox.Size = Vector3.new(6, 6, 6)
			hitbox.CFrame = spawnCF + Vector3.new(0, faceOffset, 0)
			hitbox.Anchored = true
			hitbox.CanCollide = false
			hitbox.Transparency = 1
			hitbox.Name = "Hitbox"
			hitbox.Parent = obj
		end
		return obj
	end
end

local function isLookingAt(obj)
	local hitbox = obj:FindFirstChild("Hitbox")
	if not hitbox then return false end
	local viewportPoint, onScreen = camera:WorldToViewportPoint(hitbox.Position)
	if onScreen then
		local mousePos = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
		local objPos = Vector2.new(viewportPoint.X, viewportPoint.Y)
		local distance = (mousePos - objPos).Magnitude
		return distance < 150
	end
	return false
end

local function fadeOut(model, duration)
	if not model then return end
	local parts = model:GetDescendants()
	for t = 0, 1, 0.05 do
		for _, p in ipairs(parts) do
			if p:IsA("BasePart") then
				p.Transparency = math.clamp(t, 0, 1)
			end
		end
		task.wait(duration/20)
	end
	model:Destroy()
end

local function jumpscareSequence()
	local gui = Instance.new("ScreenGui")
	gui.IgnoreGuiInset = true
	gui.ResetOnSpawn = false
	gui.Name = "JumpscareGui"
	gui.Parent = player:WaitForChild("PlayerGui")

	local blackOverlay = Instance.new("Frame")
	blackOverlay.Size = UDim2.new(1, 0, 1, 0)
	blackOverlay.BackgroundColor3 = Color3.new(0, 0, 0)
	blackOverlay.BackgroundTransparency = 0
	blackOverlay.ZIndex = 1
	blackOverlay.Parent = gui

	local filled = 0
	local maxImages = 120
	while filled < maxImages and gui.Parent do
		local img = Instance.new("ImageLabel")
		img.Image = jumpscareImageId
		img.BackgroundTransparency = 1
		img.ZIndex = 2
		local w = math.random(80, 400)
		local h = math.random(80, 400)
		img.Size = UDim2.new(0, w, 0, h)
		img.Position = UDim2.new(math.random(), -w/2, math.random(), -h/2)
		img.Rotation = math.random(0, 360)
		if math.random() > 0.5 then
			img.ImageRectOffset = Vector2.new(0, 0)
			img.ImageRectSize = Vector2.new(-100, 100)
		end
		if math.random() > 0.5 then
			img.ImageRectOffset = Vector2.new(0, 0)
			img.ImageRectSize = Vector2.new(100, -100)
		end
		img.Parent = gui

		local sound = Instance.new("Sound")
		sound.SoundId = jumpscareSoundId
		sound.Volume = 1
		sound.PlayOnRemove = true
		sound.Parent = gui
		sound:Destroy()

		filled += 1
		task.wait(0.01)
	end

	local char = player.Character
	if char and char:FindFirstChild("Humanoid") then
		char.Humanoid.Health = 0

firesignal(game.ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent, {"Aww.. Deadvil?","My star light, you stared too long... And it hurted you >///<","That scary gaze steals your light, don't let it wins~","Next time, peek quick and hide those pretty eyes for me~","I'll keep glowing, so you'll never be alone~ Bye <3"},"Blue")

game.ReplicatedStorage.GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "Deadvil"
	end

	local function clear()
		if gui then
			gui:Destroy()
		end
	end

	player.CharacterAdded:Connect(clear)
	task.delay(0.2, clear)
end

local function chasePlayer(monster, speed)
	if not (monster and monster.PrimaryPart) then return end
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	local connection
	connection = RunService.Heartbeat:Connect(function(dt)
		if not (monster and monster.PrimaryPart and hrp.Parent) then
			if connection then connection:Disconnect() end
			return
		end
		local direction = (hrp.Position - monster.PrimaryPart.Position).Unit
		local newPos = monster.PrimaryPart.Position + direction * speed * dt
		monster:SetPrimaryPartCFrame(CFrame.new(newPos, hrp.Position))
		if (monster.PrimaryPart.Position - hrp.Position).Magnitude < 3 then
			if connection then connection:Disconnect() end
			monster:Destroy()
			jumpscareSequence()
		end
	end)
end

local monster = spawnInFront(model2Id, 10, 3, -2)

if monster then
	local lookTime = 0
	local notLookTime = 0
	local checking = true

	while checking and monster.Parent do
		task.wait(0.1)
		if isLookingAt(monster) then
			lookTime = lookTime + 0.1
			notLookTime = 0
			if lookTime >= 2 then
				local pos = monster.PrimaryPart and monster.PrimaryPart.CFrame
				monster:Destroy()
				local newMonster = spawnInFront(model1Id, 10, 3, -2)
				if newMonster and newMonster.PrimaryPart and pos then
					newMonster:SetPrimaryPartCFrame(pos)
				end
				task.wait(0.5)
				chasePlayer(newMonster, 50)
				checking = false
			end
		else
			lookTime = 0
			notLookTime = notLookTime + 0.1
			if notLookTime >= 2 then
				fadeOut(monster, 1.5)
				checking = false
			end
		end
	end
end
